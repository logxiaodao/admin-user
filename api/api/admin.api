syntax = "v1"

info(
    title: "管理员用户管理"
    desc: "组合拼装管理员用户和管理员角色"
    author: "龙祥君"
    email: "longxiangjun@laihua.com"
    version: "v1.1.1"
)


type (
    GetAdminReq {
        CurrentPage int     `form:"currentPage" valid:"range(1|2147483647),required" example:"1"`
        PageSize    int     `form:"pageSize" valid:"in(1|10|20|50|100),required" example:"10"`
        Keyword     string  `form:"keyword" valid:"optional" example:"test"`
    }
    GetAdminRsp {
        Total    int64         `json:"total"`
        RowList  []AdminList   `json:"rowList"`
    }
    AdminList {
        Id              uint        `json:"id"`
        Account         string      `json:"account"`
        NickName        string      `json:"nickName"`
        Phone           string      `json:"phone"`
        Email           string      `json:"email"`
        RoleIds         string      `json:"roleIds"`
        RoleNames       string      `json:"roleNames"`
        Createdat       string      `json:"createdat"`
        Updatedat       string      `json:"updatedat"`
    }

    FindAdminByIdsReq {
        Ids string `form:"ids"  valid:"required" example:"1,2,3"`
    }
    FindAdminByIdsRsp {
        DataList []AdminList `json:"dataList"`
    }

    PostAdminReq {
        Account         string      `json:"account"  valid:"stringlength(1|255),required" example:"root"`
        Password        string      `json:"password"  valid:"stringlength(8|16),optional" example:"12345678"`
        NickName        string      `json:"nickName" valid:"stringlength(1|255),required" example:"root"`
        Phone           string      `json:"phone" valid:"stringlength(1|20),required" example:"18598814577"`
        Email           string      `json:"email" valid:"stringlength(1|255),email,required" example:"1212231@qq.com"`
        RoleIdList      []uint      `json:"roleIdList" valid:"required" example:"[1,2,3]"`
    }

    PutAdminReq {
        Id              uint        `json:"id" valid:"range(1|2147483647),required" example:"1"`
        Account         string      `json:"account"  valid:"stringlength(1|255),required" example:"root"`
        NickName        string      `json:"nickName" valid:"stringlength(1|255),required" example:"root"`
        Phone           string      `json:"phone" valid:"stringlength(1|20),required" example:"18598814577"`
        Email           string      `json:"email" valid:"email,required" example:"1212231@qq.com"`
        RoleIdList      []uint      `json:"roleIdList" valid:"required" example:"[1,2,3]"`
    }

    DeleteAdminReq {
        IdList          []uint       `json:"idList" valid:"required" example:"1"`
    }
)

@server(
    jwt: Auth
    middleware: Auth
)

service user {
    @doc (
        summary: "分页获取管理员列表信息"
    )
    @handler getAdmin
    get     /v1/auth/admin    		(GetAdminReq)     	returns (GetAdminRsp)
    @doc (
        summary: "使用id获取管理员列表信息"
    )
    @handler FindAdminByIds
    get     /v1/auth/findAdminByIds (FindAdminByIdsReq) returns (FindAdminByIdsRsp)
    @doc (
        summary: "添加管理员用户"
    )
    @handler postAdmin
    post    /v1/auth/admin    		(PostAdminReq)    	returns ()
    @doc (
        summary: "修改管理员用户"
    )
    @handler putAdmin
    put     /v1/auth/admin    		(PutAdminReq)     	returns ()
    @doc (
        summary: "删除管理员用户"
    )
    @handler deleteAdmin
    delete  /v1/auth/admin    		(DeleteAdminReq)  	returns ()
}
