syntax = "v1"

info(
    title: "管理员角色管理"
    desc: "组合拼装管理员角色和管理员权限"
    author: "龙祥君"
    email: "longxiangjun@laihua.com"
    version: "v1.1.1"
)


type (
    GetRoleReq {
        CurrentPage int `form:"currentPage" valid:"range(1|2147483647),required" example:"1"`
        PageSize    int `form:"pageSize" valid:"in(1|10|20|50|100),required" example:"10"`
        Keyword     string  `form:"keyword" valid:"optional" example:"test"`
    }
    GetRoleRsp {
        Total    int64         `json:"total"`
        RowList  []RoleList    `json:"rowList"`
    }
    RoleList {
        Id              uint         `json:"id"`
        RoleName        string       `json:"roleName"`
        PermissionIds   string       `json:"permissionIds"`
        PermissionNames string       `json:"permissionNames"`
        Createdat       string       `json:"createdat"`
        Updatedat       string       `json:"updatedat"`
    }

    FindRoleByIdsReq {
        Ids string `form:"ids"  valid:"required" example:"1,2,3"`
    }
    FindRoleByIdsRsp {
        DataList []RoleList `json:"dataList"`
    }

    PostRoleReq {
        RoleName         string      `json:"roleName"   valid:"stringlength(1|50),required" example:"产品"`
        PermissionIdList []uint      `json:"permissionIdList" valid:"required" example:"[1,2,3]"`
    }

    PutRoleReq {
        Id                  uint         `json:"id" valid:"range(1|2147483647),required" example:"1"`
        RoleName            string       `json:"roleName" valid:"stringlength(1|50),required" example:"产品"`
        PermissionIdList    []uint       `json:"permissionIdList" valid:"required" example:"[1,2,3]"`
    }

    DeleteRoleReq {
        IdList             []uint       `json:"idList" valid:"required" example:"[1,2,3]"`
    }
)

@server(
    jwt: Auth
    middleware: Auth
)

service user {
    @doc (
        summary: "分页获取管理员角色列表信息"
    )
    @handler getRole
    get     /v1/auth/role    		(GetRoleReq)     	returns (GetRoleRsp)
    @doc (
        summary: "使用id获取管理员角色列表信息"
    )
    @handler FindRoleByIds
    get     /v1/auth/findRoleByIds  (FindRoleByIdsReq)  returns (FindRoleByIdsRsp)
    @doc (
        summary: "添加管理员角色"
    )
    @handler postRole
    post    /v1/auth/role    		(PostRoleReq)    	returns ()
    @doc (
        summary: "修改管理员角色"
    )
    @handler putRole
    put     /v1/auth/role    		(PutRoleReq)     	returns ()
    @doc (
        summary: "删除管理员角色"
    )
    @handler deleteRole
    delete  /v1/auth/role    		(DeleteRoleReq)  	returns ()
}
