// Code generated by goctl. DO NOT EDIT.
package types

type LoginReq struct {
	PlatformID uint   `json:"platformID"  valid:"range(1|2147483647),required" example:"1"`
	Username   string `json:"username"  valid:"required" example:"root"`
	Password   string `json:"password"  valid:"required" example:"123456"`
}

type LoginRes struct {
	Id           int64  `json:"id"`
	Name         string `json:"name"`
	PlatformID   int64  `json:"platformID"`
	AccessToken  string `json:"accessToken"`
	AccessExpire int64  `json:"accessExpire"`
	RefreshAfter int64  `json:"refreshAfter"`
}

type UpdatePasswordReq struct {
	OldPassword     string `json:"oldPassword"  valid:"required,stringlength(8|16)" example:"12345678"`
	NewPassword     string `json:"newPassword"  valid:"required,stringlength(8|16)" example:"12345678"`
	ConfirmPassword string `json:"confirmPassword"  valid:"required,stringlength(8|16)" example:"12345678"`
}

type CheckPermissionReq struct {
	HttpMethod string `json:"httpMethod" valid:"in(GET|POST|PUT|DELETE),required" example:"get"`
	HttpPath   string `json:"httpPath" valid:"stringlength(1|255),required" example:"/api"`
}

type GetUserInfoRsp struct {
	Id         int64  `json:"id"`
	Account    string `json:"account"`
	NickName   string `json:"nickName"`
	Phone      string `json:"phone"`
	Email      string `json:"email"`
	PlatformID int64  `json:"platformId"`
	Createdat  string `json:"createdat"`
	Updatedat  string `json:"updatedat"`
}

type CheckPermissionRsp struct {
	IsPass bool `json:"isPass"`
}

type GetApiReq struct {
	CurrentPage int    `form:"currentPage" valid:"range(1|2147483647),required" example:"1"`
	PageSize    int    `form:"pageSize" valid:"in(1|10|20|50|100),required" example:"10"`
	Keyword     string `form:"keyword" valid:"optional" example:"test"`
}

type GetApiRsp struct {
	Total   int64     `json:"total"`
	RowList []ApiList `json:"rowList"`
}

type ApiList struct {
	Id         uint   `json:"id"`
	Name       string `json:"name"`
	HttpMethod string `json:"httpMethod"`
	HttpPath   string `json:"httpPath"`
	Createdat  string `json:"createdat"`
	Updatedat  string `json:"updatedat"`
}

type FindApiByIdsReq struct {
	Ids string `form:"ids"  valid:"required" example:"1,2,3"`
}

type FindApiByIdsRsp struct {
	DataList []ApiList `json:"dataList"`
}

type PostApiReq struct {
	PostApiList
}

type BatchPostApiReq struct {
	ItemList []PostApiList `json:"itemList"`
}

type PostApiList struct {
	Name       string `json:"name" valid:"stringlength(1|255),required" example:"root"`
	HttpMethod string `json:"httpMethod" valid:"in(GET|POST|PUT|DELETE),required" example:"get"`
	HttpPath   string `json:"httpPath" valid:"stringlength(1|255),required" example:"/api"`
}

type PutApiReq struct {
	Id         uint   `json:"id" valid:"required,range(1|2147483647)" example:"1"`
	Name       string `json:"name" valid:"stringlength(1|255),required" example:"root"`
	HttpMethod string `json:"httpMethod" valid:"in(GET|POST|PUT|DELETE),required" example:"get"`
	HttpPath   string `json:"httpPath" valid:"stringlength(1|255),required" example:"/api"`
}

type DeleteApiReq struct {
	IdList []uint `json:"idList" valid:"required" example:"1"`
}

type GetAdminReq struct {
	CurrentPage int    `form:"currentPage" valid:"range(1|2147483647),required" example:"1"`
	PageSize    int    `form:"pageSize" valid:"in(1|10|20|50|100),required" example:"10"`
	Keyword     string `form:"keyword" valid:"optional" example:"test"`
}

type GetAdminRsp struct {
	Total   int64       `json:"total"`
	RowList []AdminList `json:"rowList"`
}

type AdminList struct {
	Id        uint   `json:"id"`
	Account   string `json:"account"`
	NickName  string `json:"nickName"`
	Phone     string `json:"phone"`
	Email     string `json:"email"`
	RoleIds   string `json:"roleIds"`
	RoleNames string `json:"roleNames"`
	Createdat string `json:"createdat"`
	Updatedat string `json:"updatedat"`
}

type FindAdminByIdsReq struct {
	Ids string `form:"ids"  valid:"required" example:"1,2,3"`
}

type FindAdminByIdsRsp struct {
	DataList []AdminList `json:"dataList"`
}

type PostAdminReq struct {
	Account    string `json:"account"  valid:"stringlength(1|255),required" example:"root"`
	Password   string `json:"password"  valid:"stringlength(8|16),optional" example:"12345678"`
	NickName   string `json:"nickName" valid:"stringlength(1|255),required" example:"root"`
	Phone      string `json:"phone" valid:"stringlength(1|20),required" example:"18598814577"`
	Email      string `json:"email" valid:"stringlength(1|255),email,required" example:"1212231@qq.com"`
	RoleIdList []uint `json:"roleIdList" valid:"required" example:"[1,2,3]"`
}

type PutAdminReq struct {
	Id         uint   `json:"id" valid:"range(1|2147483647),required" example:"1"`
	Account    string `json:"account"  valid:"stringlength(1|255),required" example:"root"`
	NickName   string `json:"nickName" valid:"stringlength(1|255),required" example:"root"`
	Phone      string `json:"phone" valid:"stringlength(1|20),required" example:"18598814577"`
	Email      string `json:"email" valid:"email,required" example:"1212231@qq.com"`
	RoleIdList []uint `json:"roleIdList" valid:"required" example:"[1,2,3]"`
}

type DeleteAdminReq struct {
	IdList []uint `json:"idList" valid:"required" example:"1"`
}

type GetRoleReq struct {
	CurrentPage int    `form:"currentPage" valid:"range(1|2147483647),required" example:"1"`
	PageSize    int    `form:"pageSize" valid:"in(1|10|20|50|100),required" example:"10"`
	Keyword     string `form:"keyword" valid:"optional" example:"test"`
}

type GetRoleRsp struct {
	Total   int64      `json:"total"`
	RowList []RoleList `json:"rowList"`
}

type RoleList struct {
	Id              uint   `json:"id"`
	RoleName        string `json:"roleName"`
	PermissionIds   string `json:"permissionIds"`
	PermissionNames string `json:"permissionNames"`
	Createdat       string `json:"createdat"`
	Updatedat       string `json:"updatedat"`
}

type FindRoleByIdsReq struct {
	Ids string `form:"ids"  valid:"required" example:"1,2,3"`
}

type FindRoleByIdsRsp struct {
	DataList []RoleList `json:"dataList"`
}

type PostRoleReq struct {
	RoleName         string `json:"roleName"   valid:"stringlength(1|50),required" example:"产品"`
	PermissionIdList []uint `json:"permissionIdList" valid:"required" example:"[1,2,3]"`
}

type PutRoleReq struct {
	Id               uint   `json:"id" valid:"range(1|2147483647),required" example:"1"`
	RoleName         string `json:"roleName" valid:"stringlength(1|50),required" example:"产品"`
	PermissionIdList []uint `json:"permissionIdList" valid:"required" example:"[1,2,3]"`
}

type DeleteRoleReq struct {
	IdList []uint `json:"idList" valid:"required" example:"[1,2,3]"`
}

type GetPermissionReq struct {
	CurrentPage int    `form:"currentPage" valid:"range(1|2147483647),required" example:"1"`
	PageSize    int    `form:"pageSize" valid:"in(1|10|20|50|100),required" example:"10"`
	Keyword     string `form:"keyword" valid:"optional" example:"test"`
}

type GetPermissionRsp struct {
	Total   int64            `json:"total"`
	RowList []PermissionList `json:"rowList"`
}

type PermissionList struct {
	Id             uint   `json:"id"`
	PermissionName string `json:"permissionName"`
	ApiIds         string `json:"apiIds"`
	ApiNames       string `json:"apiNames"`
	Createdat      string `json:"createdat"`
	Updatedat      string `json:"updatedat"`
}

type FindPermissionByIdsReq struct {
	Ids string `form:"ids"  valid:"required" example:"1,2,3"`
}

type FindPermissionByIdsRsp struct {
	DataList []PermissionList `json:"dataList"`
}

type PostPermissionReq struct {
	PermissionName string `json:"permissionName" valid:"stringlength(1|255),required" example:"产品"`
	ApiIdList      []uint `json:"apiIdList" valid:"required" example:"[1,2]"`
}

type PutPermissionReq struct {
	Id             uint   `json:"id" valid:"range(1|2147483647),required" example:"1"`
	PermissionName string `json:"permissionName" valid:"stringlength(1|255),required" example:"产品"`
	ApiIdList      []uint `json:"apiIdList" valid:"required" example:"[1,2]"`
}

type DeletePermissionReq struct {
	IdList []uint `json:"idList" valid:"required" example:"[1,2]"`
}
